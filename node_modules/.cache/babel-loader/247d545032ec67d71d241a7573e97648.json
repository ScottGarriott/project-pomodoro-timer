{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Thinkful\\\\qualified-assignments\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport PomodoroTimeAdjusters from \"./PomodoroTimeAdjusters\";\nimport PomodoroTimerView from \"./PomodoroTimerView\";\nimport PomodoroStartStop from \"./PomodoroStartStop\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\nfunction Pomodoro() {\n  //Timer duration states\n  const initialDurationState = {\n    focusDuration: 25,\n    breakDuration: 5\n  };\n  const [durations, setDurations] = useState({ ...initialDurationState\n  }); //Other states\n  // Timer starts out paused\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(PomodoroTimeAdjusters, {\n    durations: durations,\n    setDurations: setDurations,\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PomodoroStartStop, {\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    durations: durations,\n    setSession: setSession,\n    session: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PomodoroTimerView, {\n    session: session,\n    durations: durations,\n    setSession: setSession,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/owner/Thinkful/qualified-assignments/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","PomodoroTimeAdjusters","PomodoroTimerView","PomodoroStartStop","Pomodoro","initialDurationState","focusDuration","breakDuration","durations","setDurations","isTimerRunning","setIsTimerRunning","session","setSession"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,QAAT,GAAoB;AAElB;AACF,QAAMC,oBAAoB,GAAG;AAC3BC,IAAAA,aAAa,EAAE,EADY;AAE3BC,IAAAA,aAAa,EAAE;AAFY,GAA7B;AAIA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAC,GAAGK;AAAJ,GAAD,CAA1C,CAPoB,CAUpB;AACA;;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD,CAZoB,CAcpB;;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAGE,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAIQ,SAApC;AAA+C,IAAA,YAAY,EAAIC,YAA/D;AAA6E,IAAA,OAAO,EAAIG,OAAxF;AAAiG,IAAA,UAAU,EAAEC,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEK,oBAAC,iBAAD;AACA,IAAA,cAAc,EAAIH,cADlB;AAEA,IAAA,iBAAiB,EAAIC,iBAFrB;AAGA,IAAA,SAAS,EAAIH,SAHb;AAIA,IAAA,UAAU,EAAIK,UAJd;AAKA,IAAA,OAAO,EAAED,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,eASK,oBAAC,iBAAD;AACA,IAAA,OAAO,EAAIA,OADX;AAEA,IAAA,SAAS,EAAIJ,SAFb;AAGA,IAAA,UAAU,EAAEK,UAHZ;AAIA,IAAA,cAAc,EAAEH,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATL,CADD;AAkBD;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PomodoroTimeAdjusters from \"./PomodoroTimeAdjusters\";\nimport PomodoroTimerView from \"./PomodoroTimerView\";\nimport PomodoroStartStop from \"./PomodoroStartStop\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction Pomodoro() {\n\n  //Timer duration states\nconst initialDurationState = {\n  focusDuration: 25,\n  breakDuration: 5\n};\nconst [durations, setDurations] = useState({...initialDurationState})\n\n\n//Other states\n// Timer starts out paused\nconst [isTimerRunning, setIsTimerRunning] = useState(false);\n\n// The current session - null where there is no session running\n\nconst [session, setSession] = useState(null);  \n  \n\n  return (\n   <React.Fragment>\n      <PomodoroTimeAdjusters durations = {durations} setDurations = {setDurations} session = {session} setSession={setSession}/>\n        <PomodoroStartStop \n        isTimerRunning = {isTimerRunning} \n        setIsTimerRunning = {setIsTimerRunning} \n        durations = {durations} \n        setSession = {setSession} \n        session={session} \n        />\n        <PomodoroTimerView \n        session = {session} \n        durations = {durations} \n        setSession={setSession} \n        isTimerRunning={isTimerRunning}\n        />\n  </React.Fragment>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}