{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Thinkful\\\\qualified-assignments\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport PomodoroTimeAdjusters from \"./PomodoroTimeAdjusters\";\nimport PomodoroTimerView from \"./PomodoroTimerView\";\nimport PomodoroStartStop from \"./PomodoroStartStop\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\nfunction Pomodoro({\n  isTimerRunning,\n  setIsTimerRunning,\n  durations,\n  setSession,\n  session,\n  initialSessionState,\n  ariaValues,\n  setAriaValues,\n  initialAriaValues,\n  setDurations\n}) {\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(PomodoroTimeAdjusters, {\n    durations: durations,\n    setDurations: setDurations,\n    session: session,\n    setSession: setSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PomodoroStartStop, {\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    durations: durations,\n    setSession: setSession,\n    session: session,\n    initialSessionState: initialSessionState,\n    setAriaValues: setAriaValues,\n    initialAraiValues: initialAriaValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PomodoroTimerView, {\n    session: session,\n    durations: durations,\n    setSession: setSession,\n    isTimerRunning: isTimerRunning,\n    ariaValues: ariaValues,\n    setAriaValues: setAriaValues,\n    initialAraiValues: initialAriaValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/owner/Thinkful/qualified-assignments/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","PomodoroTimeAdjusters","PomodoroTimerView","PomodoroStartStop","Pomodoro","isTimerRunning","setIsTimerRunning","durations","setSession","session","initialSessionState","ariaValues","setAriaValues","initialAriaValues","setDurations"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,QAAT,CAAmB;AAACC,EAAAA,cAAD;AACjBC,EAAAA,iBADiB;AAEjBC,EAAAA,SAFiB;AAGjBC,EAAAA,UAHiB;AAIjBC,EAAAA,OAJiB;AAKjBC,EAAAA,mBALiB;AAMjBC,EAAAA,UANiB;AAOjBC,EAAAA,aAPiB;AAQjBC,EAAAA,iBARiB;AASjBC,EAAAA;AATiB,CAAnB,EASkB;AAKhB;AACF;AACA;AACA;AACA;AAME,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAIP,SAApC;AAA+C,IAAA,YAAY,EAAIO,YAA/D;AAA6E,IAAA,OAAO,EAAIL,OAAxF;AAAiG,IAAA,UAAU,EAAED,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEK,oBAAC,iBAAD;AACA,IAAA,cAAc,EAAIH,cADlB;AAEA,IAAA,iBAAiB,EAAIC,iBAFrB;AAGA,IAAA,SAAS,EAAIC,SAHb;AAIA,IAAA,UAAU,EAAIC,UAJd;AAKA,IAAA,OAAO,EAAEC,OALT;AAMA,IAAA,mBAAmB,EAAEC,mBANrB;AAOA,IAAA,aAAa,EAAEE,aAPf;AAQA,IAAA,iBAAiB,EAAEC,iBARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,eAYK,oBAAC,iBAAD;AACA,IAAA,OAAO,EAAIJ,OADX;AAEA,IAAA,SAAS,EAAIF,SAFb;AAGA,IAAA,UAAU,EAAEC,UAHZ;AAIA,IAAA,cAAc,EAAEH,cAJhB;AAKA,IAAA,UAAU,EAAEM,UALZ;AAMA,IAAA,aAAa,EAAEC,aANf;AAOA,IAAA,iBAAiB,EAAEC,iBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZL,CADD;AAuBD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport PomodoroTimeAdjusters from \"./PomodoroTimeAdjusters\";\nimport PomodoroTimerView from \"./PomodoroTimerView\";\nimport PomodoroStartStop from \"./PomodoroStartStop\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction Pomodoro( {isTimerRunning, \n  setIsTimerRunning, \n  durations, \n  setSession, \n  session, \n  initialSessionState,\n  ariaValues,\n  setAriaValues,\n  initialAriaValues,\n  setDurations} ) {\n\n  \n  \n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n \n\n \n  \n\n  return (\n   <React.Fragment>\n      <PomodoroTimeAdjusters durations = {durations} setDurations = {setDurations} session = {session} setSession={setSession}/>\n        <PomodoroStartStop \n        isTimerRunning = {isTimerRunning} \n        setIsTimerRunning = {setIsTimerRunning} \n        durations = {durations} \n        setSession = {setSession} \n        session={session} \n        initialSessionState={initialSessionState}\n        setAriaValues={setAriaValues}\n        initialAraiValues={initialAriaValues}\n        />\n        <PomodoroTimerView \n        session = {session} \n        durations = {durations} \n        setSession={setSession} \n        isTimerRunning={isTimerRunning}\n        ariaValues={ariaValues}\n        setAriaValues={setAriaValues}\n        initialAraiValues={initialAriaValues}/>\n  </React.Fragment>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}