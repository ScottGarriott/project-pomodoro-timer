{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Thinkful\\\\qualified-assignments\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\PomodoroStartStop.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"./utils/class-names\";\n\nfunction PomodoroStartStop({\n  isTimerRunning,\n  setIsTimerRunning,\n  durations,\n  setSession,\n  session,\n  initialSessionState\n}) {\n  function nextSession(focusDuration, breakDuration) {\n    /**\r\n     * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n     */\n    return currentSession => {\n      if (currentSession.label === \"Focusing\") {\n        return {\n          label: \"On Break\",\n          timeRemaining: breakDuration * 60\n        };\n      }\n\n      return {\n        label: \"Focusing\",\n        timeRemaining: focusDuration * 60\n      };\n    };\n  }\n  /**\r\n  * Called whenever the play/pause button is clicked.\r\n  */\n\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: durations.focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function stop() {\n    if ((session === null || session === void 0 ? void 0 : session.label) !== \"\") {\n      setSession(() => {\n        setIsTimerRunning(false);\n        return initialSessionState;\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })))));\n}\n\n;\nexport default PomodoroStartStop;","map":{"version":3,"sources":["C:/Users/owner/Thinkful/qualified-assignments/Project_Pomodoro_Timer_Qualified_1/src/PomodoroStartStop.js"],"names":["React","useState","classNames","PomodoroStartStop","isTimerRunning","setIsTimerRunning","durations","setSession","session","initialSessionState","nextSession","focusDuration","breakDuration","currentSession","label","timeRemaining","playPause","prevState","nextState","prevStateSession","stop","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,SAASC,iBAAT,CAA6B;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA,SAArC;AAAgDC,EAAAA,UAAhD;AAA4DC,EAAAA,OAA5D;AAAqEC,EAAAA;AAArE,CAA7B,EAA0H;AAExH,WAASC,WAAT,CAAqBC,aAArB,EAAoCC,aAApC,EAAmD;AACjD;AACJ;AACA;AACI,WAAQC,cAAD,IAAoB;AACzB,UAAIA,cAAc,CAACC,KAAf,KAAyB,UAA7B,EAAyC;AACvC,eAAO;AACLA,UAAAA,KAAK,EAAE,UADF;AAELC,UAAAA,aAAa,EAAEH,aAAa,GAAG;AAF1B,SAAP;AAID;;AACD,aAAO;AACLE,QAAAA,KAAK,EAAE,UADF;AAELC,QAAAA,aAAa,EAAEJ,aAAa,GAAG;AAF1B,OAAP;AAID,KAXD;AAYD;AAEE;AACL;AACA;;;AACI,WAASK,SAAT,GAAqB;AACjBX,IAAAA,iBAAiB,CAAEY,SAAD,IAAe;AAC/B,YAAMC,SAAS,GAAG,CAACD,SAAnB;;AACA,UAAIC,SAAJ,EAAe;AACbX,QAAAA,UAAU,CAAEY,gBAAD,IAAsB;AAC/B;AACA;AACA,cAAIA,gBAAgB,KAAK,IAAzB,EAA+B;AAE7B,mBAAO;AACLL,cAAAA,KAAK,EAAE,UADF;AAELC,cAAAA,aAAa,EAAET,SAAS,CAACK,aAAV,GAA0B;AAFpC,aAAP;AAID;;AACD,iBAAOQ,gBAAP;AACD,SAXS,CAAV;AAYD;;AACD,aAAOD,SAAP;AACD,KAjBgB,CAAjB;AAkBD;;AAEH,WAASE,IAAT,GAAgB;AACd,QAAG,CAAAZ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,KAAT,MAAmB,EAAtB,EAAyB;AACvBP,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA,eAAOI,mBAAP;AACD,OAHS,CAAV;AAKD;AACF;;AACL,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEO,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAEd,UAAU,CAAC;AACpBmB,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACjB,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAoBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,MAHd;AAIE,IAAA,KAAK,EAAC,kBAJR;AAKE,IAAA,OAAO,EAAEgB,IALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CApBF,CADF,CADR,CADA;AAoCC;;AAAA;AAED,eAAejB,iBAAf","sourcesContent":["import React, { useState } from \"react\"; \r\nimport classNames from \"./utils/class-names\";\r\n\r\nfunction PomodoroStartStop ( { isTimerRunning, setIsTimerRunning, durations, setSession, session, initialSessionState } ) {\r\n\r\n  function nextSession(focusDuration, breakDuration) {\r\n    /**\r\n     * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\r\n     */\r\n    return (currentSession) => {\r\n      if (currentSession.label === \"Focusing\") {\r\n        return {\r\n          label: \"On Break\",\r\n          timeRemaining: breakDuration * 60,\r\n        };\r\n      }\r\n      return {\r\n        label: \"Focusing\",\r\n        timeRemaining: focusDuration * 60,\r\n      };\r\n    };\r\n  }\r\n\r\n     /**\r\n   * Called whenever the play/pause button is clicked.\r\n   */\r\n    function playPause() {\r\n        setIsTimerRunning((prevState) => {\r\n          const nextState = !prevState;\r\n          if (nextState) {\r\n            setSession((prevStateSession) => {\r\n              // If the timer is starting and the previous session is null,\r\n              // start a focusing session.\r\n              if (prevStateSession === null) {\r\n                \r\n                return {\r\n                  label: \"Focusing\",\r\n                  timeRemaining: durations.focusDuration * 60,\r\n                };\r\n              }\r\n              return prevStateSession;\r\n            });\r\n          }\r\n          return nextState;\r\n        });\r\n      }\r\n      \r\n    function stop() {\r\n      if(session?.label !== \"\"){\r\n        setSession(() => {\r\n          setIsTimerRunning(false);\r\n          return initialSessionState;\r\n        });\r\n        \r\n      }\r\n    }\r\nreturn(\r\n<div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !isTimerRunning,\r\n                  \"oi-media-pause\": isTimerRunning,\r\n                })}\r\n              />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"stop\"\r\n              title=\"Stop the session\"\r\n              onClick={stop}\r\n            >\r\n              <span className=\"oi oi-media-stop\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n)\r\n};\r\n\r\nexport default PomodoroStartStop;"]},"metadata":{},"sourceType":"module"}